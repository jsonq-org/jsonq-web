<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>jsonq.org</title>
    <description>jsonq.org</description>
    <link>http://www.jsonq.org</link>
    <pubDate>2014-09-02</pubDate>
    <item>
      <title>Aggregation operations - conditional count</title>
      <link>http://www.jsonq.org/examples/aggregation/2</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    5, 
    4, 
    1, 
    3, 
    9, 
    8, 
    6, 
    7, 
    2, 
    0
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;where&amp;quot;: &amp;quot;n % 2 == 1&amp;quot;, 
  &amp;quot;as&amp;quot;: &amp;quot;n&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: &amp;quot;count(n)&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - grouped average</title>
      <link>http://www.jsonq.org/examples/aggregation/18</link>
      <description>&lt;h1 id="toc_0"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;group&amp;quot;: {
    &amp;quot;into&amp;quot;: &amp;quot;g&amp;quot;, 
    &amp;quot;by&amp;quot;: &amp;quot;p.category&amp;quot;
  }, 
  &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;Products&amp;quot;, 
  &amp;quot;select&amp;quot;: {
    &amp;quot;category&amp;quot;: &amp;quot;g.key&amp;quot;, 
    &amp;quot;averagePrice&amp;quot;: &amp;quot;g.average(p.unitPrice)&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;category&amp;quot;: &amp;quot;Beverages&amp;quot;, 
    &amp;quot;averagePrice&amp;quot;: 37.979166666666664
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Condiments&amp;quot;, 
    &amp;quot;averagePrice&amp;quot;: 23.0625
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Produce&amp;quot;, 
    &amp;quot;averagePrice&amp;quot;: 32.37
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Meat/Poultry&amp;quot;, 
    &amp;quot;averagePrice&amp;quot;: 54.00666666666667
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Seafood&amp;quot;, 
    &amp;quot;averagePrice&amp;quot;: 20.6825
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Dairy Products&amp;quot;, 
    &amp;quot;averagePrice&amp;quot;: 28.73
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Confections&amp;quot;, 
    &amp;quot;averagePrice&amp;quot;: 25.16
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Grains/Cereals&amp;quot;, 
    &amp;quot;averagePrice&amp;quot;: 20.25
  }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - grouped count</title>
      <link>http://www.jsonq.org/examples/aggregation/4</link>
      <description>&lt;h1 id="toc_0"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;group&amp;quot;: {
    &amp;quot;into&amp;quot;: &amp;quot;g&amp;quot;, 
    &amp;quot;by&amp;quot;: &amp;quot;p.category&amp;quot;
  }, 
  &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;Products&amp;quot;, 
  &amp;quot;select&amp;quot;: {
    &amp;quot;category&amp;quot;: &amp;quot;g.key&amp;quot;, 
    &amp;quot;productCount&amp;quot;: &amp;quot;g.count()&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;category&amp;quot;: &amp;quot;Beverages&amp;quot;, 
    &amp;quot;productCount&amp;quot;: 12
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Condiments&amp;quot;, 
    &amp;quot;productCount&amp;quot;: 12
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Produce&amp;quot;, 
    &amp;quot;productCount&amp;quot;: 5
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Meat/Poultry&amp;quot;, 
    &amp;quot;productCount&amp;quot;: 6
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Seafood&amp;quot;, 
    &amp;quot;productCount&amp;quot;: 12
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Dairy Products&amp;quot;, 
    &amp;quot;productCount&amp;quot;: 10
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Confections&amp;quot;, 
    &amp;quot;productCount&amp;quot;: 13
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Grains/Cereals&amp;quot;, 
    &amp;quot;productCount&amp;quot;: 7
  }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - grouped count</title>
      <link>http://www.jsonq.org/examples/aggregation/7</link>
      <description>&lt;h1 id="toc_0"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;group&amp;quot;: {
    &amp;quot;into&amp;quot;: &amp;quot;g&amp;quot;, 
    &amp;quot;by&amp;quot;: &amp;quot;p.category&amp;quot;
  }, 
  &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;Products&amp;quot;, 
  &amp;quot;select&amp;quot;: {
    &amp;quot;category&amp;quot;: &amp;quot;g.key&amp;quot;, 
    &amp;quot;totalUnitsInStock&amp;quot;: &amp;quot;g.sum(p.unitsInStock)&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;category&amp;quot;: &amp;quot;Beverages&amp;quot;, 
    &amp;quot;totalUnitsInStock&amp;quot;: 559
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Condiments&amp;quot;, 
    &amp;quot;totalUnitsInStock&amp;quot;: 507
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Produce&amp;quot;, 
    &amp;quot;totalUnitsInStock&amp;quot;: 100
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Meat/Poultry&amp;quot;, 
    &amp;quot;totalUnitsInStock&amp;quot;: 165
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Seafood&amp;quot;, 
    &amp;quot;totalUnitsInStock&amp;quot;: 701
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Dairy Product&amp;quot;, 
    &amp;quot;totalUnitsInStock&amp;quot;: 393
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Confections&amp;quot;, 
    &amp;quot;totalUnitsInStock&amp;quot;: 386
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Grains/Cereal&amp;quot;, 
    &amp;quot;totalUnitsInStock&amp;quot;: 308
  }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - grouped max</title>
      <link>http://www.jsonq.org/examples/aggregation/14</link>
      <description>&lt;h1 id="toc_0"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;group&amp;quot;: {
    &amp;quot;into&amp;quot;: &amp;quot;g&amp;quot;, 
    &amp;quot;by&amp;quot;: &amp;quot;p.category&amp;quot;
  }, 
  &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;Products&amp;quot;, 
  &amp;quot;select&amp;quot;: {
    &amp;quot;category&amp;quot;: &amp;quot;g.key&amp;quot;, 
    &amp;quot;mostExpensivePrice&amp;quot;: &amp;quot;g.max(p.unitPrice)&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;category&amp;quot;: &amp;quot;Beverages&amp;quot;, 
    &amp;quot;mostExpensivePrice&amp;quot;: 263.5
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Condiments&amp;quot;, 
    &amp;quot;mostExpensivePrice&amp;quot;: 43.9
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Produce&amp;quot;, 
    &amp;quot;mostExpensivePrice&amp;quot;: 53.0
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Meat/Poultry&amp;quot;, 
    &amp;quot;mostExpensivePrice&amp;quot;: 123.79
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Seafood&amp;quot;, 
    &amp;quot;mostExpensivePrice&amp;quot;: 62.5
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Dairy Products&amp;quot;, 
    &amp;quot;mostExpensivePrice&amp;quot;: 55.0
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Confections&amp;quot;, 
    &amp;quot;mostExpensivePrice&amp;quot;: 81.0
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Grains/Cereals&amp;quot;, 
    &amp;quot;mostExpensivePrice&amp;quot;: 38.0
  }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - grouped min</title>
      <link>http://www.jsonq.org/examples/aggregation/10</link>
      <description>&lt;h1 id="toc_0"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;group&amp;quot;: {
    &amp;quot;into&amp;quot;: &amp;quot;g&amp;quot;, 
    &amp;quot;by&amp;quot;: &amp;quot;p.category&amp;quot;
  }, 
  &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;Products&amp;quot;, 
  &amp;quot;select&amp;quot;: {
    &amp;quot;category&amp;quot;: &amp;quot;g.key&amp;quot;, 
    &amp;quot;cheapestPrice&amp;quot;: &amp;quot;g.min(p.unitPrice)&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;category&amp;quot;: &amp;quot;Beverages&amp;quot;, 
    &amp;quot;cheapestPrice&amp;quot;: 4.5
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Condiments&amp;quot;, 
    &amp;quot;cheapestPrice&amp;quot;: 10.0
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Produce&amp;quot;, 
    &amp;quot;cheapestPrice&amp;quot;: 10.0
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Meat/Poultry&amp;quot;, 
    &amp;quot;cheapestPrice&amp;quot;: 7.45
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Seafood&amp;quot;, 
    &amp;quot;cheapestPrice&amp;quot;: 6.0
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Dairy Products&amp;quot;, 
    &amp;quot;cheapestPrice&amp;quot;: 2.5
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Confections&amp;quot;, 
    &amp;quot;cheapestPrice&amp;quot;: 9.2
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Grains/Cereals&amp;quot;, 
    &amp;quot;cheapestPrice&amp;quot;: 7.0
  }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - max subquery</title>
      <link>http://www.jsonq.org/examples/aggregation/15</link>
      <description>&lt;h1 id="toc_0"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;group&amp;quot;: {
    &amp;quot;into&amp;quot;: &amp;quot;g&amp;quot;, 
    &amp;quot;by&amp;quot;: &amp;quot;p.category&amp;quot;
  }, 
  &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;Products&amp;quot;, 
  &amp;quot;select&amp;quot;: {
    &amp;quot;category&amp;quot;: &amp;quot;g.key&amp;quot;, 
    &amp;quot;mostExpensiveProducts&amp;quot;: {
      &amp;quot;where&amp;quot;: &amp;quot;p.unitPrice == g.max(p.unitPrice)&amp;quot;, 
      &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
      &amp;quot;from&amp;quot;: &amp;quot;g&amp;quot;, 
      &amp;quot;select&amp;quot;: &amp;quot;p&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;category&amp;quot;: &amp;quot;Beverages&amp;quot;, 
    &amp;quot;mostExpensiveProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Beverages&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 17, 
        &amp;quot;productName&amp;quot;: &amp;quot;C\u00c3\u00b4te de Blaye&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 263.5, 
        &amp;quot;productId&amp;quot;: 38
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Condiments&amp;quot;, 
    &amp;quot;mostExpensiveProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Condiments&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 24, 
        &amp;quot;productName&amp;quot;: &amp;quot;Vegie-spread&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 43.9, 
        &amp;quot;productId&amp;quot;: 63
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Produce&amp;quot;, 
    &amp;quot;mostExpensiveProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Produce&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 20, 
        &amp;quot;productName&amp;quot;: &amp;quot;Manjimup Dried Apples&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 53.0, 
        &amp;quot;productId&amp;quot;: 51
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Meat/Poultry&amp;quot;, 
    &amp;quot;mostExpensiveProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Meat/Poultry&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 0, 
        &amp;quot;productName&amp;quot;: &amp;quot;Th\u00c3\u00bcringer Rostbratwurst&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 123.79, 
        &amp;quot;productId&amp;quot;: 29
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Seafood&amp;quot;, 
    &amp;quot;mostExpensiveProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Seafood&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 42, 
        &amp;quot;productName&amp;quot;: &amp;quot;Carnarvon Tigers&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 62.5, 
        &amp;quot;productId&amp;quot;: 18
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Dairy Products&amp;quot;, 
    &amp;quot;mostExpensiveProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Dairy Products&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 79, 
        &amp;quot;productName&amp;quot;: &amp;quot;Raclette Courdavault&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 55.0, 
        &amp;quot;productId&amp;quot;: 59
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Confections&amp;quot;, 
    &amp;quot;mostExpensiveProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Confections&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 40, 
        &amp;quot;productName&amp;quot;: &amp;quot;Sir Rodney&amp;#39;s Marmalade&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 81.0, 
        &amp;quot;productId&amp;quot;: 20
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Grains/Cereals&amp;quot;, 
    &amp;quot;mostExpensiveProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Grains/Cereals&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 2, 
        &amp;quot;productName&amp;quot;: &amp;quot;Gnocchi di nonna Alice&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 38.0, 
        &amp;quot;productId&amp;quot;: 56
      }
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - min subquery</title>
      <link>http://www.jsonq.org/examples/aggregation/11</link>
      <description>&lt;h1 id="toc_0"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;group&amp;quot;: {
    &amp;quot;into&amp;quot;: &amp;quot;g&amp;quot;, 
    &amp;quot;by&amp;quot;: &amp;quot;p.category&amp;quot;
  }, 
  &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;Products&amp;quot;, 
  &amp;quot;select&amp;quot;: {
    &amp;quot;category&amp;quot;: &amp;quot;g.key&amp;quot;, 
    &amp;quot;cheapestProducts&amp;quot;: {
      &amp;quot;where&amp;quot;: &amp;quot;p.unitPrice == g.min(p.unitPrice)&amp;quot;, 
      &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
      &amp;quot;from&amp;quot;: &amp;quot;g&amp;quot;, 
      &amp;quot;select&amp;quot;: &amp;quot;p&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;category&amp;quot;: &amp;quot;Beverages&amp;quot;, 
    &amp;quot;cheapestProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Beverages&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 20, 
        &amp;quot;productName&amp;quot;: &amp;quot;Guaran\u00c3\u00a1 Fant\u00c3\u00a1stica&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 4.5, 
        &amp;quot;productId&amp;quot;: 24
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Condiments&amp;quot;, 
    &amp;quot;cheapestProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Condiments&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 13, 
        &amp;quot;productName&amp;quot;: &amp;quot;Aniseed Syrup&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 10.0, 
        &amp;quot;productId&amp;quot;: 3
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Produce&amp;quot;, 
    &amp;quot;cheapestProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Produce&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 4, 
        &amp;quot;productName&amp;quot;: &amp;quot;Longlife Tofu&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 10.0, 
        &amp;quot;productId&amp;quot;: 74
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Meat/Poultry&amp;quot;, 
    &amp;quot;cheapestProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Meat/Poultry&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 21, 
        &amp;quot;productName&amp;quot;: &amp;quot;Tourti\u00c3\u00a8re&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 7.45, 
        &amp;quot;productId&amp;quot;: 54
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Seafood&amp;quot;, 
    &amp;quot;cheapestProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Seafood&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 24, 
        &amp;quot;productName&amp;quot;: &amp;quot;Konbu&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 6.0, 
        &amp;quot;productId&amp;quot;: 13
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Dairy Products&amp;quot;, 
    &amp;quot;cheapestProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Dairy Products&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 112, 
        &amp;quot;productName&amp;quot;: &amp;quot;Geitost&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 2.5, 
        &amp;quot;productId&amp;quot;: 33
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Confections&amp;quot;, 
    &amp;quot;cheapestProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Confections&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 25, 
        &amp;quot;productName&amp;quot;: &amp;quot;Teatime Chocolate Biscuits&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 9.2, 
        &amp;quot;productId&amp;quot;: 19
      }
    ]
  }, 
  {
    &amp;quot;category&amp;quot;: &amp;quot;Grains/Cereals&amp;quot;, 
    &amp;quot;cheapestProducts&amp;quot;: [
      {
        &amp;quot;category&amp;quot;: &amp;quot;Grains/Cereals&amp;quot;, 
        &amp;quot;unitsInStock&amp;quot;: 38, 
        &amp;quot;productName&amp;quot;: &amp;quot;Filo Mix&amp;quot;, 
        &amp;quot;unitPrice&amp;quot;: 7.0, 
        &amp;quot;productId&amp;quot;: 52
      }
    ]
  }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - nested count</title>
      <link>http://www.jsonq.org/examples/aggregation/3</link>
      <description>&lt;h1 id="toc_0"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;as&amp;quot;: &amp;quot;c&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;Customers&amp;quot;, 
  &amp;quot;select&amp;quot;: {
    &amp;quot;customerId&amp;quot;: &amp;quot;c.customerId&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: &amp;quot;count(c.orders)&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;ALFKI&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 6
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;ANATR&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 4
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;ANTON&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 7
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;AROUT&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 13
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;BERGS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 18
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;BLAUS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 7
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;BLONP&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 11
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;BOLID&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 3
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;BONAP&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 17
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;BOTTM&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 14
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;BSBEV&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;CACTU&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 6
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;CENTC&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 1
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;CHOPS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 8
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;COMMI&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 5
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;CONSH&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 3
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;DRACD&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 6
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;DUMON&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 4
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;EASTC&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 8
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;ERNSH&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 30
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;FAMIA&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 7
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;FISSA&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 0
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;FOLIG&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 5
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;FOLKO&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 19
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;FRANK&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 15
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;FRANR&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 3
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;FRANS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 6
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;FURIB&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 8
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;GALED&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 5
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;GODOS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;GOURL&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 9
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;GREAL&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 11
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;GROSR&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 2
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;HANAR&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 14
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;HILAA&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 18
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;HUNGC&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 5
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;HUNGO&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 19
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;ISLAT&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;KOENE&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 14
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;LACOR&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 4
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;LAMAI&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 14
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;LAUGB&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 3
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;LAZYK&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 2
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;LEHMS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 15
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;LETSS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 4
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;LILAS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 14
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;LINOD&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 12
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;LONEP&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 8
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;MAGAA&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;MAISD&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 7
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;MEREP&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 13
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;MORGK&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 5
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;NORTS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 3
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;OCEAN&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 5
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;OLDWO&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;OTTIK&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 9
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;PARIS&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 0
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;PERIC&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 6
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;PICCO&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;PRINI&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 6
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;QUEDE&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 9
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;QUEEN&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 13
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;QUICK&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 28
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;RANCH&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 5
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;RATTC&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 18
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;REGGC&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 12
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;RICAR&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 11
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;RICSU&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;ROMEY&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 5
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;SANTG&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 6
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;SAVEA&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 31
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;SEVES&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 9
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;SIMOB&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 7
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;SPECD&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 4
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;SPLIR&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 9
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;SUPRD&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 12
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;THEBI&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 4
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;THECR&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 3
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;TOMSP&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 5
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;TORTU&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;TRADH&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 7
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;TRAIH&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 3
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;VAFFE&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 11
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;VICTE&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;VINET&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 4
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;WANDK&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 10
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;WARTH&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 15
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;WELLI&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 9
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;WHITC&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 14
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;WILMK&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 8
  }, 
  {
    &amp;quot;customerId&amp;quot;: &amp;quot;WOLZA&amp;quot;, 
    &amp;quot;orderCount&amp;quot;: 7
  }
]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - projected average</title>
      <link>http://www.jsonq.org/examples/aggregation/17</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    &amp;quot;cherry&amp;quot;, 
    &amp;quot;apple&amp;quot;, 
    &amp;quot;blueberry&amp;quot;
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;as&amp;quot;: &amp;quot;w&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: &amp;quot;average(w.length())&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;6.66666666666667
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - projected max</title>
      <link>http://www.jsonq.org/examples/aggregation/13</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    &amp;quot;cherry&amp;quot;, 
    &amp;quot;apple&amp;quot;, 
    &amp;quot;blueberry&amp;quot;
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;as&amp;quot;: &amp;quot;w&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: &amp;quot;max(w.length())&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;9
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - projected min</title>
      <link>http://www.jsonq.org/examples/aggregation/9</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    &amp;quot;cherry&amp;quot;, 
    &amp;quot;apple&amp;quot;, 
    &amp;quot;blueberry&amp;quot;
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;as&amp;quot;: &amp;quot;w&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: &amp;quot;min(w.length())&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;5
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - projected sum</title>
      <link>http://www.jsonq.org/examples/aggregation/6</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    &amp;quot;cherry&amp;quot;, 
    &amp;quot;apple&amp;quot;, 
    &amp;quot;blueberry&amp;quot;
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;as&amp;quot;: &amp;quot;w&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: &amp;quot;sum(w.length())&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;20
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - simple average</title>
      <link>http://www.jsonq.org/examples/aggregation/16</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    5, 
    4, 
    1, 
    3, 
    9, 
    8, 
    6, 
    7, 
    2, 
    0
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;as&amp;quot;: &amp;quot;n&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: &amp;quot;average(n)&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;4.5
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - simple count</title>
      <link>http://www.jsonq.org/examples/aggregation/1</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    2, 
    2, 
    3, 
    5, 
    5
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;distinct&amp;quot;: {
    &amp;quot;as&amp;quot;: &amp;quot;n&amp;quot;, 
    &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
    &amp;quot;select&amp;quot;: &amp;quot;count(n)&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;3
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - simple max</title>
      <link>http://www.jsonq.org/examples/aggregation/12</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    5, 
    4, 
    1, 
    3, 
    9, 
    8, 
    6, 
    7, 
    2, 
    0
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;as&amp;quot;: &amp;quot;n&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: &amp;quot;max(n)&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;9
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - simple min</title>
      <link>http://www.jsonq.org/examples/aggregation/8</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    5, 
    4, 
    1, 
    3, 
    9, 
    8, 
    6, 
    7, 
    2, 
    0
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;as&amp;quot;: &amp;quot;n&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: &amp;quot;min(n)&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;0
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Aggregation operations - simple sum</title>
      <link>http://www.jsonq.org/examples/aggregation/5</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    5, 
    4, 
    1, 
    3, 
    9, 
    8, 
    6, 
    7, 
    2, 
    0
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;as&amp;quot;: &amp;quot;n&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: &amp;quot;sum(n)&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;45
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Cross join</title>
      <link>http://www.jsonq.org/examples/join/1</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    &amp;quot;Beverages&amp;quot;, 
    &amp;quot;Condiments&amp;quot;, 
    &amp;quot;Vegetables&amp;quot;, 
    &amp;quot;Dairy Products&amp;quot;, 
    &amp;quot;Seafood&amp;quot;
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;join&amp;quot;: {
    &amp;quot;on&amp;quot;: &amp;quot;Products&amp;quot;, 
    &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
    &amp;quot;by&amp;quot;: &amp;quot;c == p.category&amp;quot;
  }, 
  &amp;quot;as&amp;quot;: &amp;quot;c&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;select&amp;quot;: {
    &amp;quot;category&amp;quot;: &amp;quot;c&amp;quot;, 
    &amp;quot;productName&amp;quot;: &amp;quot;p.productName&amp;quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    <item>
      <title>Cross join with Group join</title>
      <link>http://www.jsonq.org/examples/join/3</link>
      <description>&lt;h1 id="toc_0"&gt;Arguments&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;[
  [
    &amp;quot;Beverages&amp;quot;, 
    &amp;quot;Condiments&amp;quot;, 
    &amp;quot;Vegetables&amp;quot;, 
    &amp;quot;Dairy Products&amp;quot;, 
    &amp;quot;Seafood&amp;quot;
  ]
]
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_1"&gt;Query&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;join&amp;quot;: {
    &amp;quot;into&amp;quot;: &amp;quot;ps&amp;quot;, 
    &amp;quot;on&amp;quot;: &amp;quot;Products&amp;quot;, 
    &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
    &amp;quot;by&amp;quot;: &amp;quot;c == p.category&amp;quot;
  }, 
  &amp;quot;as&amp;quot;: &amp;quot;c&amp;quot;, 
  &amp;quot;from&amp;quot;: &amp;quot;args[0]&amp;quot;, 
  &amp;quot;query&amp;quot;: {
    &amp;quot;as&amp;quot;: &amp;quot;p&amp;quot;, 
    &amp;quot;from&amp;quot;: &amp;quot;ps&amp;quot;, 
    &amp;quot;select&amp;quot;: {
      &amp;quot;category&amp;quot;: &amp;quot;c&amp;quot;, 
      &amp;quot;productName&amp;quot;: &amp;quot;p.productName&amp;quot;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id="toc_2"&gt;Results&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
  </channel>
</rss>
